################################################
# Blockchain Commons Standup Script Config file
################################################

# To setup a bitcoin server using standup scripts set the following
# environment variables accordingly by uncommenting and/or setting
# appropriate values.

# contributor: jodobear

###########################
# system
###########################
# Prompt user befor continuing with the installation. Gives the user
# a chance to check the configuration before installing. Set it to
# true to remove the prompt
NOPROMPT=false
# Set password for user "standup". Good practice to use at least 8
# character long password.
# Don't ignore this.
USERPASSWORD=


###########################
# vps
###########################
# If you are using a VPS, set it to true and set the HOSTNAME, FQDN &
# REGION variables.
VPS=false
# the name for your server
HOSTNAME=
# the domain name(website) where you will host/access the server.
# if you are going to access it locally then you can just use your hostname and add .local like so: hostname.local
FQDN=
# the region in which the server is hosted. Required for timezone settings
REGION=


###########################
# Tor & SSH
###########################
# set a Tor public key if you have one.
TOR_PUBKEY=
# set an SSH key if you have one.
SSH_KEY=
# set a comma seperated set of white listed IPs that can SSH into the server.
SYS_SSH_IP=


###########################
# bitcoind
###########################
# The bitcoin network you want bitcoind to start with. Valid choices:
# mainnet, testnet or regtest
NETWORK=mainnet
# specify location where you want to create your bitcoin data directory.
# by defaut it will be /home/standup.
# Do NOT add `/.bitcoin/` it will be created by the script
# This is helpful to reduce costs and/or security
BTC_DATA_DIR=/home/standup
# Integer value to specify level of prune node. Minimum value is 550.
PRUNE=
# If you want to speed up the Initial Block Download then set it to true.
# Currently not implemented. It will use snapshot hosted by btcpayserver.
# Documentation: https://github.com/btcpayserver/btcpayserver-docker/tree/master/contrib/FastSync
# DISCLAIMER: It is always better to let your node validate blocks from the
# beginning. This script uses blockchain data signed by BTCPay Server.
# Trust at your own risk.
# FASTSYNC=false
# Choose to install HWI: Hardware Wallet Interface
# HWI=false


###########################
# lightning
###########################
# Choose your lightning network installation. By default the script will
# not install lightning. Valid options: c-lightning, lnd or empty
LIGHTNING=
# Set alias of your lightning node
LN_ALIAS=StandUp


###########################
# c-lightning options
###########################
# http-plugin
# CLN_HTTP_PLUGIN=flase
# password for http communication
# HTTP_PASS=


###########################
# services
###########################
# set to true if you want to install an esplora server
ESPLORA=false
# set to true if you want to install btcpay server
# BTCPAYSERVER=false


###########################
# Esplora
###########################
# enable lightnode? Uses ~50% disk space but, costs ~50% more time for lookups. Good for personal use.
LIGHTMODE=false
# If available RAM is more than 2Gb, set this to `false` for faster sync
LIMIT_BATCH_SIZE=true
# electrs database directory
ELECTRS_DB=/home/standup/electrs_db
# If Esplora is running on a remote machine than Electrs, then set the IP of that machine or to allow requests from everywhere copy and paste this: \'*\'
CORS=localhost
# Enable NoScript prerender server?
# PRERENDER_ASSETS=flase


###########################
# BTCPAY Server
###########################
# the domain name where you will host your BTCPay Server.
# BTCPAY_HOST=
# set the lightning network implementation for your BTCPay Server,
# options: clightning or lnd
# BTCPAY_LN=
